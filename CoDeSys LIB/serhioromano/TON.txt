FUNCTION_BLOCK TON

VAR_INPUT
IN: BOOL; (* Запустить таймер по повышающему сигналу и отключить по понижающему *)
PT: TIME; (* время задержки перед включением выхода Q *)
END_VAR

VAR_OUTPUT
Q:  BOOL; (* станет TRUE, когда время PT истечет после подачи сигнала на IN *)
ET: TIME; (* Время, которое таймер уже проработал *)
END_VAR
	
VAR
M: BOOL;         (* память включения *)
StartTime: TIME; (* время начала отсчета *)
END_VAR

(* Если таймер включился *)
IF (IN) THEN
    (* Сработает только один раз, так как М в конце кода
    присвоится значение TRUE. Назначаем тут точку времени,
    когда таймер запустился. *)
    IF (NOT M) THEN
        (* Сохранить точку отсчета таймера *)
        STARTTIME := TIME();
    END_IF
    (* Если не окончен отсчёт *)
    IF (NOT Q) THEN
        (* Считаем прошедшее время с начала работы таймера *)
        ET := TIME() - STARTTIME;
        (* Если время работы таймера равно или даже больше
        чем уставка PT, назначаем выход Q *)
        IF (ET >= PT) THEN
            Q := TRUE;
            ET := PT;
        END_IF
    END_IF
ELSE
    (* Таймер выключен, все сбрасываем *)
    Q := FALSE;
    ET := T#0S;
END_IF
M := IN;

// Книга: Изучаем Structured Text стандарта МЭК 61131-3
// ISBN: 978-1-64199-106-3
// https://vk.com/serhioromano
// https://www.youtube.com/user/serhioromano
